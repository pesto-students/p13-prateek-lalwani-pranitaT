

Form for joining a social network
Please Complete Below assignment and upload github link of that solution after completion
Add a web form to index.html as shown below that allows the user to enter personal information for joining a social network. The webpage uses CSS to align the form widgets vertically.



The form should:

Use the POST method and the "multipart/form-data" enctype
Submit to
Use a <label> for each form field and the label text shown in the image above
Use a <div> to surround each label and form widget and a <div> around the submit button
Use a text <input> with name and id "fullName" to get the user's name
Use a text <input> with name and id "email" to get the user's email address
Use a <textarea> with 3 rows, 50 columns, and name and id "about" to get a short description about the user
Use a text <input> with type "file" and name and id "picture" to get the user's image
Use a submit <input> button
Use the required attribute for name and email fields



Happy Birthday Message Creator
Please Complete Below assignment and upload github link of that solution after completion
The user can enter a birthday message and select various message options. The webpage uses CSS to align the form widgets vertically. The webpage should look like the following:

URL

The form should:

Use the regular expression [a-zA-Z0-9-_.]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0- 9-]+)* for the email address <input> to verify the user enters what looks to be an
email address

Use a date <input> for specifying a date to send the message
Use a color <input> for selecting the message color
Use a number <input> with a default value of 0, minimum of 0, and maximum of 10 for number of times the message blinks
Use a range <input> with a default value of 20, minimum of 0, and maximum of 50 for the music volume
Use a submit <button> that reads "Send Birthday Message"
Specify an id attribute for all form elements that matches the given for attribute of each
associated <label>

Specify a name attribute for all form elements that matches each element's id attribute



Please Complete Below assignment and upload github link of that solution after completion
Add a form to index.html that allows the user to select a team's starting lineup for a game.

URL

The form should:

Use a <p> to surround related labels, form widgets, and fieldsets
Use a <fieldset> and <legend> with radio buttons for choosing Draft or Final. The radio buttons' name attribute should be "status" with values "Draft" and "Final".
Make the Final radio button checked by default
Add a <label> to each radio button so clicking the label text selects the radio button
Use a drop-down with the following dates: March 20, March 24, April 2, April 6, April 13. The <select> name attribute should be "gameDate", and each <option> should use a value identical to the option's date.
Use a <fieldset> and <legend> with check boxes for choosing players: Aarav
Agarwal, Ava Johnson, Julio Ortiz, Liam Rubio, Emma Witherspoon. The name attribute "player" should be used for all check boxes, and each check box should use a value identical to the player's name.

Add a <label> to each checkbox so clicking the label text selects the checkbox
Use a submit <input> with value "Submit"




Your Favourite Musician Webpage
Please Complete Below assignment and upload github link of that solution after completion
Create a webpage in a file called index.html about one of your favorite musicians, similar to the example below.

URL

Use the following HTML containers:

<header> with <h1> tags that contain the musician's name
<main> with 2 paragraphs:
1st paragraph gives some background information
2nd paragraph links to at least one website about the musician
<footer> that names the webpage's creator






Restaurant Reviews
Please Complete Below assignment and upload github link of that solution after completion
Problem Statement: We have to develop a RestaurentReviews Website according to below requirements

This section presents an example restaurant review website. The website collects reviews from users and displays the reviews on each restaurant's details page.

Website has 4 pages:

Home Page
Restaurant Details Page
Add Review Page
About Page
Wireframes of restaurant review webpages.

URL

Home page

The home page for Restaurant Reviews is index.html, which is a common filename for a website's home page. Most web servers by default serve the index.html file when a URL does not specify an explicit filename. Ex: Accessing http:/pesto.tech/ in a web browser loads http://pesto.tech/index.html.

To maintain a consistent look, all the website's pages have the same <header> tags with navigation links and <footer> tags that specify the copyright information. The home page is broken into several sections with <section> tags, and each of the featured restaurants are asssigned to a section.Home Page:

URL

Detail pages

The website provides detailed restaurant reviews when the user clicks the restaurant name on the home page. Only two restaurants are listed, so only two detail webpages are required for this example:

mainstreetcafe.html - Details about Main Street Cafe
URL

greekhouse.html - Details about Greek House
URL
Note: Dynamically-built webpages

As individuals enter new reviews, the static detail webpages need to be updated continually. Usually a website that displays frequently-changing content uses a server-side program to dynamically create webpages from data stored in a database. This example, however, uses static content for simplicity and hands-on

Add Review Page:

URL

About Page:

URL





Auto Loan
Please Complete Below assignment and upload github link of that solution after completion
Add the necessary CSS rules to styles.css so the provided HTML produces the following webpage:

URL

Hints( Refer only if required as last option):

The following style rules should be added to styles.css:

The default fonts (in order of priority) should be Roboto, Helvetica, and sans-serif
The heading "Comparison of Dealer Incentives and Loan Offers" should be 16px font using color #444444 and have centered text
Define a container class whose contents is centered, has a 5 pixel margin, and defines a font size of 13px
Each offer is defined in a <div> tag with the class offer. Define the offer class such that:
Each offer is displayed inline-block, with a fixed width of 400 pixels, a 4 pixel margin, and centered text
Each offer has a 1 pixel solid border using color #cccccc
The offer title is defined in a <div> tag with offerTitle class. Define the
offerTitle class such that:

The title uses 14px bold font with color #ffffff
The title's background is colored #00b3b3
The title has no margin and 15 pixels of padding
The offer contents are defined in a <div> tag with class offerContents. Define the offerContents class such that:
Each offer contents div has 20 pixels of padding and background colored #fafafa
Define CSS rules such that all tables have the following styling:
The table should have a width of 100%, background colored #ffffff, and no border spacing
Header cells should use a 12px bold font with color #777777
Data cells should use a font lighter than normal weight with color #444444
Header cells should have 10 pixels of padding and no margin
Data cells should have 10 pixels of padding on the left and right, 20 pixels of padding on top and bottom, and no margin
Both header cells and data cells should left align text
Both header cells and data cells should have a solid bottom border of 1 pixel using color #f1f1f1
Define a class finalValue that defines a bold font weight with color #2222ff








Best Selling Video Games Table
Please Complete Below assignment and upload github link of that solution after completion
Modify styles.css so the provided HTML produces the webpage below.

URL

Hints( Refer only if required as last option): Add the following CSS rules to styles.css:

An ID selector for the ID game-table should:
Use the border property to add a 2px solid border using the color from the CSS variable --table-color
Use the text-align property to center all text
Use a height of 200px and width of 400px
A descendant selector that targets the <caption> inside the <table> should:
Use the text-transform property to make the caption UPPERCASE
Set the background color using the CSS variable --table-color
Set the font color to white
Add 10px padding
A pseudo-class selector :nth-child(even) for <tr> should:
Set the background color using the CSS variable --row-bg-color.





News Article
Please Complete Below assignment and upload github link of that solution after completion
Add the necessary CSS rules to styles.css so the provided HTML produces the following webpage:

URL

Hints( Refer only if required as last option):

Add CSS rules to styles.css that matches the following styling:

Both article's images styled with a width of 300px
Article's <h1> tag styled with:
5px padding all around
Font family of Arial
Font size of 24px
Font color of white
Background color of red
Selecting the id of author-name-and-date, style the author name and date with:
Font family of Arial
Font size of 12px
Font color of lightgray
Article's text (<p> and <ol> tags) styled with:
Font family of Times New Roman
Font size of 16px
Font color of gray
Article's share links (<a> tags) styled with:
Font family of Arial
Font size of 12px
Font color of blue
Note: Colors, font sizes, padding, etc. must be exact.












Sleep Recommendation List
Please Complete Below assignment and upload github link of that solution after completion
Modify the HTML file's embedded stylesheet to produce the webpage below.

URL

Hints( Refer only if required as last option):

Add CSS rules to the embedded stylesheet so each element uses the following styles:

<body> uses Arial, Helvetica, sans-serif font family, 18px font size, and #EDF4FB background color
<h1> uses RGB (26, 69, 107) font color
<li> uses #296CA8 font color
<span> with "age" class uses an italic font style
<span> with "recommended" class has a yellow background color and underlined text











Style the form with advanced selectors
Please Complete Below assignment and upload github link of that solution after completion
Modify the HTML file's embedded stylesheet to produce the webpage below.

URL

Add the following CSS rules to the embedded stylesheet:

An element selector to make <label> an inline-block element with 120px width.
A multiple selector to make all <input> and <textarea> elements have a 300px width with 10px padding.
An attribute selector to make an <input> with attribute type="submit" have an auto width.
A pseudo-element selector ::after for the .required class to place a red asterisk (*) immediately after any element that uses the .required class.
An adjacent sibling selector to make any <input> that is a sibling of <label> use background color rgb(219, 241, 248).








Animating the answer
Please Complete Below assignment and upload github link of that solution after completion
Folder contains HTML and CSS file. Modify the HTML file's embedded stylesheet to produce an animation, resulting in the webpage below.



Hints: ( Refer only if needed)

Make the following modifications to the embedded stylesheet:

Add a keyframe called moveFraction that does the following:
At 0% sets the font color to yellow and uses transform property to translate to position (-355px, 60px) so the fraction is off the left side of the screen.
At 50% translates to (0px, 60px) so the fraction is just below and right of the question.
At 100% sets font color to red and translates to (0px, 0px) so the fraction is located next to the = sign.
In the #answer rule start the moveFraction animation 1 second after the CSS loads, and make the animation duration 2 seconds.
In the #answer rule use animation-fill-mode: forwards to keep the fraction from resetting back to the original location after the animation completes.
Add a transition property to the #question rule to perform a transform over 0.6 seconds with the ease-in-out timing function.
Add a transform property to the #question:hover rule to scale by 0.9.
Verify that when the page loads, the 3/4 fraction moves from off the screen to the right, just under the question, then up next to the question. When the mouse hovers over the question, the text should shrink some until the mouse is moved off the text.











Recipe with flexbox
Please Complete Below assignment and upload github link of that solution after completion
Modify styles.css so the HTML produces the webpage below.



Hints: Folder ( Refer only if needed)

Add the following style rules to the stylesheet:

tag: set display to be flex and justify-content to be space-between
content class: set display to be flex and flex-wrap to be wrap
main-content class: set display to be flex, flex-wrap to be wrap, flex-grow to be 1, and flex-basis to be 70%
title class: set display to be flex and align-items to be baseline
summary class: set display to be flex, justify-content to be space-evenly, flex-grow to be 1, and flex-basis to be 100%
tag child of
tag child of summary class: set display to be flex and justify- content to be space-between
ingredients and directions classes: set flex-grow to be 1 and flex-basis to be 45%
related-content class: set flex-grow to be 1 and flex-basis to be 20%








Position the playing cards
Please Complete Below assignment and upload github link of that solution after completion
Folder contains HTML and CSS file. Modify styles.css file so the webpage displays two playing cards on a green background.



Hints: ( Refer only if needed)

Add the following CSS to styles.css:

Add a linear-gradient background to the .table rule that goes from forestgreen to darkgreen.
Add a border-radius property of 5px and a black box-shadow property with 3px x and y offsets to the .card rule.
Add absolute positioning to the .cardTop rule, and position the card 150px from the left and 100px from the top of the container edge.
Add absolute positioning to the .cardBottom rule, and position the card 240px from the left and 120px from the top of the container edge.
Add a z-index property to the .cardTop and .cardBottom rules to make the top card appear on top.
Add absolute positioning to the .topLeft selector to place the symbol 2px from the left and top edges of the card.
Add absolute positioning to the .bottomRight selector to place the symbol 2px from the right and bottom edges of the card.







Tic-tac-toe game with grid layout
Please Complete Below assignment and upload github link of that solution after completion
Modify styles.css so the webpage displays a tic-tac-toe board as shown below.



Hints: ( Refer only if needed)

Add the following CSS to the #board selector in styles.css:

A display property that makes the board's
element a grid layout container.
A grid-template-columns property to create three columns that are all 100px wide.
A grid-template-rows property to create three rows that are all 100px tall.
A grid-gap property to create a 10px gap between each of the nine grid cells.
A justify-content property that centers the grid horizontally.




CSS practice
Please Complete Below assignment and upload github link of that solution after completion
Modify the HTML file to produce a webpage for the following poem/song, entitled "Yesterday":

Yesterday, All those backups seemed a waste of pay. Now my database has gone away. Oh I believe in yesterday.

Suddenly, There's not half the files there used to be, And there's a milestone hanging over me. The system crashed so suddenly. I pushed something wrong, What it was I could not say.

Now all my data's gone and I long for yesterday-ay-ay-ay.

Yesterday, The need for back-ups seemed so far away. I knew my data was all here to stay, Now I believe in yesterday.

Use CSS to format the webpage so it looks exactly like the screenshot below:



Hints: ( Refer only if needed) Requirements:

Use either an embedded stylesheet or inline styles for all formatting.
Use a
for each of the 4 verse containers and the outer container.
The title “Yesterday” uses an
tag with a 16pt Arial font that is blue and italicized. Do not use an tag.
The entire song is embedded in a container that is 600 x 280 pixels, has a two pixel solid blue border, and a five pixel padding. The background color is #F0F0F0.
The outer
's first child is the
. The 4 child
s follow, declared in the order listed below.
The yellow section:
has a background color of "yellow"
floats to the left
has a 200 pixel width
has a 10 pixel padding
has a right margin of 10 pixels, with all other margins set to 0
The section with no background color has no CSS styling.
The orange section:
has a background color of "orange"
is positioned at (110px, 200px) with absolute positioning
has a 200 pixel width
has a 10 pixel padding
The orange-red section:
has a background color of "rgb(255, 80, 0)"
has white text
floats to the right
has a 200 pixel width
has a 10 pixel padding
has a right margin of 40 pixels, a top margin of 20 pixels, and all other margins set to 0
Do not use
anywhere in your HTML.














